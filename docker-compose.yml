version: "3"

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: microservices
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - ./sql/schemas.sql:/docker-entrypoint-initdb.d/1-schemas.sql
      - ./sql/data.sql:/docker-entrypoint-initdb.d/2-data.sql
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - zipkin
    restart: unless-stopped

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.9.11-management-alpine
    volumes:
      - rabbitmq:/var/lib/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=root
    restart: unless-stopped

  eureka-discovery-service:
    container_name: eureka-discovery-service
    image: lcarraro/eureka-discovery-service:latest
    ports:
      - "8761:8761"
    networks:
      - spring
      - zipkin
    depends_on:
      - zipkin
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  api-gateway:
    container_name: api-gateway
    image: lcarraro/api-gateway:latest
    ports:
      - "8760:8760"
    networks:
      - spring
      - zipkin
    depends_on:
      - zipkin
      - eureka-discovery-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  customer-service:
    container_name: customer-service
    image: lcarraro/customer-service:latest
    ports:
      - "3000:3000"
    networks:
      - spring
      - zipkin
      - rabbitmq
      - postgres
    depends_on:
      - zipkin
      - postgres
      - rabbitmq
      - eureka-discovery-service
      - api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  fraud-checking-service:
    container_name: fraud-checking-service
    image: lcarraro/fraud-checking-service:latest
    ports:
      - "3002:3002"
    networks:
      - spring
      - zipkin
      - postgres
    depends_on:
      - zipkin
      - postgres
      - eureka-discovery-service
      - api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  notification-service:
    container_name: notification-service
    image: lcarraro/notification-service:latest
    ports:
      - "3004:3004"
    networks:
      - spring
      - zipkin
      - rabbitmq
      - postgres
    depends_on:
      - zipkin
      - postgres
      - rabbitmq
      - eureka-discovery-service
      - api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker

networks:
  postgres:
    driver: bridge
  zipkin:
    driver: bridge
  rabbitmq:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres:
  rabbitmq:
